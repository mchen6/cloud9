<p:defines xmlns:p="http://www.javeline.com/2008/Processor">
    <p:define name="__WITH_O3"
      match="o3"
      short="Run with O3"
      desc="">
        <p:define name="__SUPPORT_O3"
          match="o3"
          short=""
          desc="" />
        <p:define name="__WITH_O3WINDOW"
          match="o3"
          short=""
          desc="" />
    </p:define>
    <p:define name="__WITH_ASYNC"
      match=""
      short=""
      desc="" />
    <p:define name="__SUPPORT_NODE"
      match=""
      short=""
      desc="Run with Node">
        <p:define name="__WITH_WRAP"
          match=""
          short=""
          desc="" />
    </p:define>
    <p:define name="__SUPPORT_GWT"
      match="gwt"
      short="Support APF-GWT"
      desc="">
        <p:define name="__AMLVIEWPORT"
          match=""
          short="Element that helps Ajax.org GWT specifying a render area."
          desc="" />
    </p:define>
    <p:define name="__DEBUG"
      match="a:appsettings[@debug='true']|a:appsettings[@debug-teleport='true']"
      short="Debugging options"
      desc="The Javeline debugger offers various for Web Application developers, like data logging, AML syntax checking/ editing, data source inspection and realtime application profiling.">
        <!-- define below implicitly requires __DEBUG -->
        <p:define name="__WITH_DEBUG_WIN"
          match="a:appsettings[@debug='true']|a:appsettings[@debug-teleport='true']"
          short="Debugger panel"
          desc="The panel is the visualisation of all Javeline Application related interaction for developers." 
          requires="__WITH_COOKIE" />
        <p:define name="__DEBUG_ERROR" />
        <p:define name="__WITH_UNSAFE_XMLHTTP"
          match=""
          short="Use greasemonkey xmlhttp request"
          desc="Uses greasemonkey script for Firefox to enable cross domain scripting for development purpose. The greasemonkey script is available from the download section." />
        <p:define name="__WITH_UNITTESTER"
          match=""
          short="Unit Testing framework"
          desc="Provides a test runner that can run all unit tests, written for and by apf developers" />
         <p:define name="__PROFILER"
          match=""
          short="ECMAScript profiler"
          desc="Provides a general-purpose, cross-browser compatible code profiling tool with fine-grained output control."/>
        <p:define name="__HIGHLIGHTING"
          match=""
          short="Syntax Highlighting"
          desc="Enables syntax highlighting of Javascript code" />
    </p:define>
    <p:define name="__NOTDISPLAYED" short="">
       <p:define name="__NOTUSED"
          match=""
          short="" />
        <p:define name="__DEPRECATED"
          match=""
          short="" />
        <p:define name="__PACKED"
          match="."
          short="" />
        <p:define name="__PROCESSED"
          match="."
          short="" />
        <p:define name="__PACKAGED"
          match="."
          short="" />
        <p:define name="__INC_ALL"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_RESIZE"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_RESIZE2"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_SCROLLBAR"
          match=""
          short=""
          desc="" />
        <p:define name="__DESKRUN"
          match=""
          short=""
          desc="Enables Javeline Deskrun support" />
        <p:group short="" requires="__WITH_CLASS|__WITH_UTILITIES|__WITH_ECMAEXT|__PARSER_AML|__WITH_AMLNODE">
            <p:define name="__WITH_WINDOW"
              match=""
              short=""
              desc="">
                <p:define name="__WITH_EVENTRECORDING"
                  match=""
                  short=""
                  descr="Enables a general purpose, application-wide record and (re)play solution of browser events." />
                <p:define name="__WITH_VISIBILITYMANAGER"
                  match=""
                  short=""
                  descr="" />
                <p:define name="__WITH_ZMANAGER"
                  match=""
                  short=""
                  descr="" />
            </p:define>
            <p:define name="__WITH_LAYOUT" 
              match="a:script[contains(text(), 'apf.layout')]"
              short=""
              desc="" />
            <p:define name="__WITH_XMLDATABASE"
              match=""
              short=""
              desc="This object routes all changes to the xml data to the data bound objects. It further provides utility functions for xml handling. " />
        </p:group>
        <p:define name="__WITH_UIRECORDER"
          match=""
          short=""
          desc="" />
        <!--p:define name="__JSPLITTER"
          match="a:splitter"
          short=""
          desc=""
          requires="__WITH_ALIGNMENT|__WITH_DRAGMODE" /-->
    </p:define>
    
    <p:group short="Crypto libraries" long="Several libraries that can encrypt and/or decrypt data.">
        <p:define name="__WITH_BASE64"
          match=""
          short="Base64 encoding/ decoding"
          desc="The base-64 system is a numeral system with 64 as its base. It is the largest power-of-two base that can be represented using single printable ASCII characters. This has led to its use as a transfer encoding for e-mail among other things." />
        <p:define name="__WITH_BLOWFISH"
          match=""
          short="Blowfish encrypting/ decrypting"
          desc="Blowfish is a keyed, symmetric block cipher, designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products." />
        <p:define name="__WITH_MD4"
          match=""
          short="MD4 hashing"
          desc="MD4 is a message digest algorithm (the fourth in a series) designed by Professor Ronald Rivest of MIT in 1990. It implements a cryptographic hash function for use in message integrity checks. The digest length is 128 bits" />
        <p:define name="__WITH_MD5"
          match=""
          short="MD5 hashing"
          desc="MD5 (Message-Digest algorithm 5) is a widely used cryptographic hash function with a 128-bit hash value. An MD5 hash is typically expressed as a 32 digit hexadecimal number." />
        <p:define name="__WITH_SHA1"
          match=""
          short="SHA1 hashing"
          desc="SHA stands for Secure Hash Algorithm. SHA-1 produces a message digest that is 160 bits long." />
        <p:define name="__WITH_RSA"
          match=""
          short="RSA public-key cryptography"
          desc="RSA is an algorithm for public-key cryptography. It is the first algorithm known to be suitable for signing as well as encryption."
          requires="__WITH_BARRETT|__WITH_BIGINT" />
        <p:define name="__WITH_BARRETT"
          match=""
          short="Barrett computations"
          desc="Provides Barrett computations with Big Integers; used by the RSA implementation"
          requires="__WITH_BIGINT" />
        <p:define name="__WITH_BIGINT"
          match=""
          short="Big Integers"
          desc="Provides support for Big Integers in Javascript; used by the RSA implementation" />
    </p:group>

    <p:group short="Libraries &amp; Classes">
        <p:group short="Utilities">
            <p:define name="__WITH_CHILDVALUE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_UTILITIES"
              match=""
              short="General Utility functions"
              desc="" />
            <p:define name="__WITH_SYNTAX"
              match=""
              short="Syntax coloring functions"
              desc="" />
            <p:define name="__WITH_ABSTRACTEVENT"
              match=""
              short="Browser events abstraction layer"
              desc="Used by several components to aid in cross-browser compatible event handling and behaviors." />
            <p:define name="__WITH_XML_UTIL"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_DATE"
              match=""
              short="Date/ time utilities"
              desc="Enables the utility library for Date parsing and i18n features; provides developers with a powerful set of tools to manipulate timestamps and format dates according to a locale" />
            <p:define name="__WITH_DATE_EXT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_CSS"
              match=""
              short="CSS utilities"
              desc="Enables a set of utility functions to manipulate Cascading StyleSheet rules." />
            <p:define name="__WITH_JSON_API"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_DRAGMODE"
              match=""
              short=""
              desc="Provides a drag and drop interface to components and HTML DOM elements" />
            <p:define name="__WITH_ECMAEXT"
              match=""
              short="Javascript Object Extensions"
              desc="Enables basic extensions to the ECMA script (javascript) language">
                <p:define name="__WITH_ZERO_TIMEOUT"
                  match=""
                  short=""
                  desc="" />
            </p:define>
            <p:define name="__WITH_UUID"
              match=""
              short="Javascript UUID generator"
              desc="Provides an extension to the Math class (Math.uuid) that generates RFC 4142 compliant UUIDs" />
            <p:define name="__WITH_ENTITY_ENCODING"
              match=""
              short="XML encoding"
              desc="Enables type-safe encoding of XML(-like) entities" />
            <p:define name="__WITH_PLANE"
              match=""
              short=""
              desc=""
              requires="__WITH_UTILITIES" />
            <p:define name="__WITH_POPUP"
              match=""
              short=""
              desc=""
              requires="__WITH_UTILITIES|__WITH_TWEEN" />
            <p:define name="__WITH_SELECTION"
              match=""
              short=""
              desc="" />
        </p:group>
        <p:define name="__WITH_COLORS"
          match=""
          short="Color library"
          desc="Provide ways to work with colors" />
        <p:define name="__WITH_VECTOR"
          match=""
          short="Vector Engine"
          desc="" />
        <p:define name="__WITH_DRAW"
          match=""
          short="Drawing Engine"
          desc=""
          requires="__WITH_COLORS">
            <!-- defines below implicitly require __WITH_DRAW -->
            <p:define name="__ENABLE_DRAW_CANVAS" 
              match=""
              short="Canvas drawing"
              desc="" />
            <p:define name="__ENABLE_DRAW_VML" 
              match=""
              short="VML drawing"
              desc="" />
        </p:define>
        <p:define name="__WITH_FLASH"
          match=""
          short="Flash Support"
          desc="Provides an advanced interface to integrate Flash movies and optimize Flash - Javascript communication (ExternalInterface)" />
        <p:define name="__WITH_SILVERLIGHT"
          match=""
          short="Silverlight support"
          desc="" />
        <p:define name="__WITH_FLOW"
          match=""
          short="Flowchart library"
          desc="" />
        <p:define name="__WITH_FLOW2"
          match=""
          short="Flowchart library"
          desc="" />
        <p:define name="__WITH_CLASS"
          match=""
          short="APF Class constructor"
          desc="Baseclass for any object offering property binding, event handling, constructor and destructor hooks." />
        <p:define name="__WITH_NAMESERVER"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_XMLDIFF"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_TEXTDIFF"
          match=""
          short=""
          desc="" />
    </p:group>

    <p:group short="General Options">
        <p:define name="__WITH_CDN"
          match=""
          short="Resources from CDN"
          desc="Use our Content Delivery Network to get additional apf resources from" />
        <p:define name="__AMLSERVICES"
          match=""
          short=""
          desc="" />
        <p:define name="__USE_TOSTRING"
          match=""
          short="Enable toString methods" />
        <p:define name="__WITH_HISTORY"
          match="a:script[contains(text(), 'apf.history')]"
          short="Back-button support"
          desc="Allows developers to re-claim the Back button of the browser inside a Javeline Web Application." />
        <p:define name="__WITH_COOKIE"
          match=""
          short="Cookie I/O"
          desc="Cookies can may be used as a simple local storage mechanism for key/ value based data." />
        <p:define name="__WITH_CONFIG"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_QUEUE"
          match=""
          short=""
          desc="" />
        <p:define name="__AMLCONTEXTMENU"
          match="@contextmenu"
          short="Contextmenu support"
          desc="Enables declarative context menu handling."
          requires="__AMLMENU" />
        <p:define name="__WITH_CONVENIENCE_API"
          match=""
          short="Convenience API"
          desc="Supplements the standard DOM API of AML elements with additional accessor methods, i.e. 'getWidth' and 'setWidth'" />
        <p:define name="__WITH_JSON2XML"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_DATA"
          match="@load|@get|@set|@jml|@submission|node()[contains(@model, ':')]"
          short="Data instructions"
          desc="Data instructions provide a way to store or retrieve data from a datasource" />
        <p:define name="__WITH_EVENT_BUBBLING"
          match="."
          short="Custom event bubbling"
          desc="" />
        <p:define name="__WITH_JSLT_EVENTS"
          match=""
          short="LiveMarkup events"
          desc="Adds support for LiveMarkup events" />
        <p:define name="__WITH_FOCUS"
          match=""
          short="Focus handling between AML elements."
          desc="Enables solid and advanced state management for Web Application from the Window object to individual components.">
            <p:define name="__WITH_WINDOW_FOCUS"
              match="a:appsettings[not(@allow-select='true')]"
              short="Browser window focus handling"
              desc="Detects whether the browser window has focus.">
                <p:define name="__WITH_TASKBAR_FLASHING"
                  match=""
                  short="Windows taskbar flashing"
                  desc="Makes the windows taskbar flash when the application is blurred." />
            </p:define>
        </p:define>
        <p:define name="__WITH_ALIAS"
          match="@alias"
          short="AML Element Alias Feature"
          desc="Sets or retrieves the alternative name for this element.The alias attribute can be set on another element. Only one element can have the alias at one time. This way it's easy to use different elements in the same function (for instance a thumbail and a datagrid) while keeping all the binding rules and events on the active element."
          requires="__WITH_PROPERTY_CHANGE" />
        <p:define name="__WITH_HOTKEY"
          match="a:script[contains(text(), 'registerHotkey')]"
          short="Hotkey support"
          desc="Enables support for assigning actions to specific key combinations (hotkeys)" />
        <p:define name="__WITH_HOTKEY_PROPERTY"
          match=""
          short="Hotkey Property binding"
          desc="" />
        <p:define name="__WITH_KEYBOARD"
          match="."
          short="Keyboard support"
          desc="Enable application-wide keyboard event handling" />
        <p:define name="__WITH_MOUSESCROLL"
          match=""
          short="Mousewheel support"
          desc="" />
        <p:define name="__WITH_PROPERTY_BINDING"
          match="@*[starts-with(., '{') or starts-with(., '\[')]"
          short="Property Binding"
          desc="Enables support of AML elements attaching hooks to properties of other AML elements."
          requires="__PARSER_LM" />
        <p:define name="__WITH_PROPERTY_WATCH"
          match="a:script[contains(text(), '.watch()')]"
          short="Property watch"
          desc="Watches for a property to be assigned a value and runs a function when that occurs." />
        <p:define name="__WITH_PROPERTY_CHANGE"
          match="a:script[contains(text(), 'propertychange')]|@onpropertychange"
          short="property change"
          desc="Fires when a property changes." />
        <p:define name="__WITH_PROPERTY_INHERITANCE"
          match=""
          short="property inheritance"
          desc="" />
        <p:define name="__WITH_REGISTRY"
          match=""
          desc="A way to store name/value pairs. This object is useful for storing information that is needed in an offline application."
          short="APF Registry"
          requires="__WITH_NAMESERVER"/>
        <p:define name="__WITH_TWEEN"
          match="a:script[contains(text(), 'apf.tween')]"
          short="CSS Animations"
          desc="Enables support for tweening between CSS states."
          requires="__WITH_CSS|__WITH_COLORS"/>
    </p:group>

    <p:define name="__WITH_STORAGE"
      match="a:appsettings/a:storage"
      short="Local storage"
      desc="Storage can be used to store states and data while the application is offline, but also serve as a simple, local data source"
      requires="__WITH_CLASS|__WITH_UTILITIES|__WITH_ECMAEXT">
        <!-- defines below implicitly require __WITH_STORAGE|__WITH_CLASS|__WITH_UTILITIES|__WITH_ECMAEXT -->
        <p:group short="Adobe AIR">
            <p:define name="__WITH_STORAGE_AIR"
              match="a:appsettings[@storage='air']"
              short="Key Value Pairs"
              desc="Store simple key/ value paired data through the Adobe Air bridge." />
            <p:define name="__WITH_STORAGE_AIR_FILE"
              match="a:appsettings[@storage='air.file']"
              short="File based"
              desc="Use the Adobe Air file-based storage feature " />
            <p:define name="__WITH_STORAGE_AIR_SQL"
              match="a:appsettings[@storage='air.sql']"
              short="SQL based"
              desc="Use the Adobe Air file-based storage feature with support for S(tructured)Q(uery)L(anguage) " />
        </p:group>
        <p:define name="__WITH_STORAGE_GEARS"
          match="a:appsettings[@storage='gears']"
          short="Google Gears Storage engine"
          desc=""
          requires="__SUPPORT_GEARS" />
        <p:define name="__WITH_STORAGE_HTML5"
          match="a:appsettings[@storage='memory']"
          short="HTML5 Local Storage engine"
          desc="" />
        <p:define name="__WITH_STORAGE_FLASH"
          match="a:appsettings[@storage='flash']"
          short="Adobe Flash Storage engine"
          desc=""
          requires="__WITH_FLASH" />
        <p:define name="__WITH_STORAGE_DESKRUN"
          match="a:appsettings[@storage='deskrun']"
          short="Javeline Deskrun Storage engine"
          desc=""
          requires="__DESKRUN" />
        <p:define name="__WITH_STORAGE_MEMORY"
          match="a:appsettings[@storage='memory']"
          short="Machine Memory Storage"
          desc="Use non-persistent, local memory only for temporary storage." />
    </p:define>

    <p:define name="__WITH_OFFLINE"
      match="a:appsettings/a:offline"
      short="Offline support"
      desc="With Javeline Offline support you can continue working inside any Javeline based RIA, even if the Internet Connection is (temporarily) unavailable. All state management, data synchronisation and offline storage issues are taken care of."
      requires="__WITH_CLASS|__WITH_AMLNODE|__WITH_UTILITIES|__WITH_ECMAEXT">
        <!-- defines below implicitly require __WITH_OFFLINE|__WITH_CLASS|__WITH_AMLNODE|__WITH_UTILITIES|__WITH_ECMAEXT -->
        <p:define name="__WITH_OFFLINE_TRANSACTIONS"
          match="a:appsettings/a:offline[contains(@resources, 'transactions')]"
          short="Offline Transactions"
          desc="State management"
          requires="__WITH_TRANSACTION" />
        <p:define name="__WITH_OFFLINE_MODELS"
          match="a:appsettings/a:offline[contains(@resources, 'models')]"
          short="Offline Models"
          desc="Data synchronisation"
          requires="__WITH_MODEL" />
        <p:define name="__WITH_OFFLINE_MODEL"
          match=""
          short="Offline Models"
          desc="Data synchronisation"
          requires="__WITH_MODEL" />
        <p:define name="__WITH_OFFLINE_STATE"
          match="a:appsettings/a:offline[contains(@resources, 'state')]"
          short="Offline State"
          desc="State management 2"
          requires="__AMLSTATE" />
        <p:define name="__WITH_OFFLINE_QUEUE"
          match="a:appsettings/a:offline[contains(@resources, 'queue')]"
          short="Offline Queue"
          desc="State management 3; queue support for undo/ redo stacks"
          requires="__WITH_ACTIONTRACKER"/>
        <p:define name="__WITH_OFFLINE_DETECTOR"
          match="a:appsettings/a:offline[not(@detect) or not(@detect='manual')]"
          short="Offline Detector"
          desc="Detects whether the application is state in online or offline" />
        <p:define name="__WITH_OFFLINE_APPLICATION"
          match="a:appsettings/a:offline"
          short="Offline Application"
          desc="Adds offline support for jml applications.It can store and restore the state of the application, the models, any transaction that occurred whilst being offline, queuing actions (ActionTracker state) and state of the runtime application itself (all properties of each element). This allows the application to return to the exact state the user left it, when needed. This means that when enabled you can at any moment turn of your computer (i.e. remove the battery) and when your computer starts up whilst sitting in the train start the application and continue working as if the application was never closed." />
        <p:define name="__WITH_OFFLINE_GEARS"
          match="a:appsettings/a:offline[@provider='gears']"
          short="Offline Gears"
          desc="Use Google Gears for offline storage"
          requires="__SUPPORT_GEARS" />
        <p:define name="__WITH_OFFLINE_STATE_REALTIME"
          match="a:appsettings/a:offline/@realtime"
          short="Offline real-time state management"
          desc="Sets or retrieves whether changes are stored realtime."
          requires="__WITH_OFFLINE_STATE" />
    </p:define>

    <p:group short="Runtime Support (i.e. Browsers)">
        <p:define name="__SUPPORT_IE"
          match="."
          short="Internet Explorer"
          desc="Internet Explorer has been, and still is by many, considered as market leader of all web browsers.">
            <!-- defines below implicitly require __SUPPORT_IE -->
            <p:define name="__SUPPORT_IE5"
              match=""
              short="Internet Explorer, version 5.0"
              desc="This is a very old version of IE, you probably do not want this." />
            <p:define name="__WITH_POPUP_IE"
              match=""
              short="Special IE Popups"
              desc="Since a popup created with createPopup() does not appear outside the browser chrome when the web application is running in the Internet Zone, we decided not to enable it by default." />
            <p:define name="__WITH_NS_SUPPORT"
              match=""
              short="Cross-browser XML namespaces"
              desc="" />
            <p:define name="__WITH_OPACITY_RUNTIME_FIX"
              match=""
              short="CSS opacity support"
              desc="" />
        </p:define>
        <p:define name="__SUPPORT_GECKO"
          match="."
          short="Gecko"
          desc="Gecko is the HTML/ XUL/ CSS rendering and Javascript engine that powers the Firefox browser, among others."
          requires="__SUPPORT_IE_API">
            <!-- defines below implicitly require __SUPPORT_GECKO -->
            <p:define name="__WITH_ELEMENT_FROM_POINT"
              match="."
              short="Enable getElementFromPoint"
              desc="This function is implemented in FF3/ Gecko 1.9." />
        </p:define>
        <p:define name="__SUPPORT_WEBKIT"
          match="."
          short="Webkit"
          desc="A cross-platform HTML/ CSS rendering and Javascript engine."
          requires="__SUPPORT_IE_API">
            <!-- defines below implicitly require __SUPPORT_SAFARI -->
            <p:define name="__SUPPORT_SAFARI2"
              match=""
              short="Support (ye olde) Safari 2.x"
              desc="Yes, the one with all the bugs." />
            <p:define name="__SUPPORT_CHROME"
              match="."
              short="Chrome"
              desc="The new browser on the block by Google." />
        </p:define>
        <p:define name="__SUPPORT_OPERA"
          match="."
          short="Opera"
          desc=""
          requires="__SUPPORT_IE_API"/>
        <p:define name="__SUPPORT_IE_API"
          match="."
          short="IE API for other browsers"
          desc=""
          requires="__WITH_NS_SUPPORT" />
        <p:define name="__SUPPORT_GEARS"
          match=""
          short="Google Gears"
          desc="Google Gears is a browser extension/ plugin that aims to add missing features in browser like Firefox, IE and Safari." />
        <p:define name="__SUPPORT_JAW"
          match=""
          short="J.A.W."
          desc="J(avascript) A(ctually) W(orks) is a command line javascript interface created by Javeline." />
        <p:define name="__SUPPORT_IPHONE"
          match=""
          short="iPhone"
          desc="The Apple iPhone is a fully web-enabled handheld device that uses Safari as its webbrowser" />
    </p:group>

    <p:group short="Parsers" requires="__WITH_CLASS|__WITH_UTILITIES|__WITH_ECMAEXT">
        <p:define name="__PARSE_GET_VARS"
          match="a:script[contains(text(), 'apf._GET')]"
          short="GET vars helper"
          desc="Provides an accessible object for reading GET variables from the application URL" />
        <p:define name="__DOMPARSER"
          match=""
          short=""
          desc=""
          requires="__TP_HTTP|__PARSER_XHTML" /><!--This could be made conditionally-->
        <p:define name="__PARSER_AML"
          match=""
          short="AML Parser"
          desc="Engine for the Javeline Markup Language; the Javeline Markup Language provides developers with a standard method of creating complex layouts and application designs in a declarative manner."
          requires="__DOMPARSER|__WITH_NAMESERVER|__PARSER_XPATH|__WITH_WINDOW|__WITH_AMLATTR|__WITH_AMLCDATASECTION|__WITH_AMLCHARACTERDATA|__WITH_AMLCOMMENT|__WITH_AMLCONFIGURATION|__WITH_AMLDOCUMENT|__WITH_AMLDOCUMENTFRAGMENT|__WITH_AMLELEMENT|__WITH_AMLEVENT|__WITH_AMLNAMEDNODEMAP|__WITH_AMLPROCESSINGINSTRUCTION|__WITH_AMLTEXT|__WITH_AMLTEXTRECTANGLE">
            <!-- defines below implicitly require __PARSER_AML -->
            <p:define name="__WITH_AMLDOM_W3C_XPATH"
              match=""
              short="W3C valid Xpath"
              desc="" />
            <p:define name="__WITH_EXPLICIT_LOWERCASE"
              match=""
              short="Case insensitive parsing"
              desc="" />
            <p:define name="__WITH_SKIN_AUTOLOAD"
              match="node()[not(//a:skin)]"
              short="Skins autoloader"
              desc="" />
            <p:define name="__WITH_SKIN_INCLUDES"
              match="a:skin//a:include/@src"
              short="Includes in the skin file"
              desc="Use an include in the skins file" />
            <p:define name="__WITH_DEFAULT_SKIN"
              match=""
              short="Default skin (included in the javascript)"
              desc=""
              requires="__WITH_CDN"/>
            <p:define name="__WITH_HTML5"
              match=""
              short="HTML5 Support"
              desc="">
                <p:define match="" short="" desc="" name="__WITH_GEOLOCATION" />
                <p:define match="" short="" desc="" name="__WITH_HTML5_TEST" />
            </p:define>
            <p:define name="__WITH_XHTML"
              match=""
              short="XHTML Support"
              desc="" />
            <p:define name="__WITH_PARTIAL_AML_LOADING"
              match=""
              short="Inline AML"
              desc="Enables support for inline AML; snippets of a AML application inside an (X)HTML webpage" />
            <p:define name="__WITH_PARSE_DOC_BY_RELOADING"
              match=""
              short="Load xml document by reloading the index file"
              desc="" />
            <p:define name="__WITH_PARTIAL_AML_LOADING_FROM_COMMENT"
              match=""
              short="Inline AML within comments"
              desc="Enables support for inline AML; snippets of a AML application inside XML comments" />
            <p:define name="__WITH_PARSE_AML_FROM_HTML"
              match=""
              short="Inline AML within HTML elements"
              desc="Enables support for inline AML; snippets of a AML application inside an HTML element" />
            <p:define name="__WITH_HTML_POSITIONING"
              match=""
              short="Positioning for HTML"
              desc="Enables support for advanced layout rules for HTML elements in addition to AML elements." />
            <p:define name="__WITH_AMLATTR"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLCDATASECTION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLCHARACTERDATA"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLCOMMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLCONFIGURATION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLDOCUMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLDOCUMENTFRAGMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLELEMENT"
              match=""
              short=""
              desc=""
              requires="__WITH_CONFIG" />
            <p:define name="__WITH_AMLEVENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLNAMEDNODEMAP"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLPROCESSINGINSTRUCTION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLTEXT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_AMLTEXTRECTANGLE"
              match=""
              short=""
              desc="" />
        </p:define>
        <!--the match for __PARSER_XSLT was xsl:node() -->
        <p:define name="__PARSER_XSLT"
          match=""
          short="XSLT Parser"
          desc="Abstraction for browsers that have not implemented XSLT, falls back to native implementations if available." />
        <p:define name="__PARSER_LM"
          match=""
          short="LM Parser"
          desc="Live Markup is an extension to Javascript, and it allows APF to have a simple consistent syntax for all attribute values and templates. Live markup is used for templating, rpc, data binding, property binding, formatting and even events. Live Markup generates text-output via the default-output of statements, and APF maintains knowledge of all properties and data used to create this output allowing for a Live update when any of this information changes. Nearly all attributes in APF are processed as a live markup ' ' string Some attributes (like events) and &lt;?lm ?&gt; blocks are processed as code." />
        <!--p:define name="__PARSER_JSLT"
          match=""
          short="JSLT Parser"
          desc="JSLT is the sister of XSLT for querying XML documents declaratively; it provides a much shorter and more efficient functionality to query your XML-based documents that is supported by any browser that support Javascript." /-->
        <p:define name="__PARSER_JS"
          match=""
          short="Javascript Parser"
          desc="" />
        <p:define name="__PARSER_XPATH"
          match=""
          short="XPath Parser"
          desc="Abstraction for browsers that have not implemented XPath, falls back to native implementations if available." />
        <p:define name="__PARSER_XSD"
          match="a:complexType|a:simpleType|@datatype"
          short="XSD Parser"
          desc="browsers that have not implemented XSD, falls back to native implementations if available."
          requires=""><!--__WITH_XSDUNION|__WITH_XSDTOTALDIGITS|__PARSER_URL|__WITH_XSDSIMPLETYPE|__WITH_XSDSCHEMA|__WITH_XSDRESTRICTION|__WITH_XSDPATTERN__WITH_XSDMINSCALE|__WITH_XSDMINLENGTH|__WITH_XSDMININCLUSIVE|__WITH_XSDMINEXCLUSIVE|__WITH_XSDMAXSCALE|__WITH_XSDMAXLENGTH|__WITH_XSDMAXINCLUSIVE|__WITH_XSDMAXEXCLUSIVE|__WITH_XSDLIST|__WITH_XSDLENGTH|__WITH_XSDFRACTIONDIGITS|__WITH_XSDENUMERATION|__WITH_XSDELEMENT-->
            <p:define name="__WITH_XSDUNION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDTOTALDIGITS"
              match=""
              short=""
              desc="" />
            <p:define name="__PARSER_URL"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDSIMPLETYPE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDSCHEMA"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDRESTRICTION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDPATTERN"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMINSCALE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMINLENGTH"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMININCLUSIVE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMINEXCLUSIVE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMAXSCALE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMAXLENGTH"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMAXINCLUSIVE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDMAXEXCLUSIVE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDLIST"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDLENGTH"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDFRACTIONDIGITS"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDENUMERATION"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XSDELEMENT"
              match=""
              short=""
              desc="" />
        </p:define>        
        <p:define name="__PARSER_URL"
          match=""
          short="URL Parser"
          desc="Parses a Uniform Resource Locator into an accessible object for developers." />
        <p:define name="__PARSER_XFORMS"
          match=""
          short="XForms Parser"
          desc="Parses a XForms."
          requires="__WITH_XFORMSBINDELEMENT|__WITH_XFORMSINSTANCEELEMENT|__WITH_XFORMSLOADELEMENT|__WITH_XFORMSMODELELEMENT|__WITH_XFORMSSUBMISSIONELEMENT|__PARSER_XSD">
            <p:define name="__WITH_XFORMSBINDELEMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XFORMSINSTANCEELEMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XFORMSLOADELEMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XFORMSMODELELEMENT"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XFORMSSUBMISSIONELEMENT"
              match=""
              short=""
              desc="" />
        </p:define>        
         <p:define name="__PARSER_XINCLUDE"
          match=""
          short="XInclude Parser"
          desc="Parses XInclude."
          requires="">
            <p:define name="__WITH_XIINCLUDE"
              match=""
              short=""
              desc="" />
            <p:define name="__WITH_XIFALLBACK"
              match=""
              short=""
              desc="" />
        </p:define>
        <p:define name="__WITH_HTML_CLEANER"
          match=""
          short="HTML Parser"
          desc="Parses a HTML." />
        <p:define name="__PARSER_XHTML"
          match=""
          short="XHTML Parser"
          desc="Parses a XHTML."
          requires="__WITH_ENTITY_ENCODING" />
    </p:group>

    <p:define name="__WITH_AMLNODE"
      match=""
      short="Features for AML elements"
      requires="__PARSER_AML|__WITH_CONVENIENCE_API">
        <!-- defines below implicitly require __WITH_AMLNODE -->       
        <p:define name="__WITH_ALIGNMENT"
          match="a:vbox|a:hbox|a:appsettings/@layout"
          short="Alignment"
          desc="Sets or retrieves the data instruction to retrieve the layout xml definition."
          requires="__WITH_LAYOUT">
            <p:define name="__WITH_DOCKING"
              match="@dock|@dockable"
              short="Docking/ undocking"
              desc="All elements inheriting from this baseclass have docking features."
              requires="__WITH_PLANE" />
            <p:define name="__WITH_SPLITTERS"
              match="node()[contains(@align, 'splitter')]"
              short="Splitter support"
              desc="Sets or retrieves the size of splitter that is placed between this and the neighbouring element to the right or top.When not specified, the splitter is not displayed."
              requires="__WITH_FOCUS|__JSPLITTER" />
            <p:define name="__WITH_ALIGNXML"
              match=""
              short="Store layout in XML"
              desc="" />
            <p:define name="__WITH_ALIGN_TEMPLATES"
              match="@align"
              short="Alignment shortcuts (left, top, right, bottom)"
              desc="Sets or retrieves the edge of the parent to which this element aligns.Possible values are a combination of: 'left', 'middle', 'right', 'top', 'bottom' and 'slider' and optionally a size."
              requires="__WITH_FOCUS" />
        </p:define>
        <p:define name="__WITH_CONVERTIFRAME"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_ANCHORING"
          match="@right|@bottom|@anchors|@width|@height"
          short="Anchoring"
          desc=""
          requires="__WITH_LAYOUT" />
        <p:define name="__WITH_CACHE"
          match=""
          short="Cache"
          desc="" />
        <p:define name="__WITH_DATAACTION"
          match=""
          short="Dataaction"
          desc="Baseclass adding data action features to this element." />
        <p:define name="__WITH_LIVEEDIT"
          match=""
          short="Live edit"
          desc="Baseclass of an element whose content is editable."
          requires="__WITH_HTML_CLEANER">
            <p:define name="__ENABLE_LIVEEDIT_RICHTEXT" />
        </p:define>
        <p:define name="__WITH_CONTENTEDITABLE"
          match=""
          short=""
          desc="" />
        <p:define name="__WITH_CONTENTEDITABLE2"
          match=""
          short=""
          desc=""
          requires="__ENABLE_INTERACTIVE_CANCEL">
            <p:define name="__WITH_AMLSELECTION" />
            <p:define name="__WITH_AMLRANGE" />
            <p:define name="__WITH_CLIPBOARD" />
            <p:define name="__WITH_CLIPBOARD_SELECTION" />
        </p:define>
        <p:define name="__WITH_MARKUPEDIT"
          match=""
          short=""
          desc="" />
        <p:define name="__ENABLE_LIVETEXT"
          match=""
          short="LiveText support"
          desc="" />
        <p:define name="__WITH_DATABINDING"
          match="actions|bindings|smartbindings|@ref"
          short="Databinding"
          desc=""
          requires="__WITH_XMLDATABASE">
            <!--p:define name="__ENABLE_BINDING_JSLT"
              match=""
              short="Transform using JSLT"
              desc="" /-->
            <p:define name="__WITH_XMLMUTATION_BINDING" 
              match=""
              short="Support for XML Mutation events"
              desc="" />
            <p:define name="__WITH_AML_BINDINGS"
              match=""
              short="AML bindings"
              desc="Experimental" />
            <p:define name="__WITH_INLINE_DATABINDING"
              match="@ref|@traverse|@icon|@caption"
              short="Bind rules as attributes"
              desc="" />
            <p:define name="__WITH_LOCKING"
              match="@locking"
              short="Resource Locking"
              desc="" />
            <p:define name="__WITH_MULTIBINDING"
              match="a:dropdown[@ref]|a:list[@ref]|a:datagrid[@ref]|a:tree[@ref]|a:textbox[@ref]"
              short="Multi-level binding"
              desc=""
              requires="__WITH_MULTISELECT" />
            <p:define name="__WITH_CSS_BINDS"
              match="a:css"
              short="CSS Bind Rules"
              desc="Enables support for a dynamic 'css' property on visual AML elements." />
            <p:define name="__WITH_SORTING"
              match="@sort"
              short="Sorting bound data"
              desc="A set of algorithms that solves most of the sorting problems and makes it easy for developers to add sorting to their elements and data." />
        </p:define>
        <p:define name="__WITH_STYLE"
          match=""
          short="CSS utilities"
          desc="Enables a set of utility functions to manipulate Cascading StyleSheet rules.">
            <p:define name="__WITH_OFFSET"
              match=""
              short="Offset utility"
              desc="Port of the jQuery.offset() function to calculate offsets for HTML elements" />
        </p:define>
        <p:define name="__WITH_DELAYEDRENDER"
          match="node()[@render='runtime']"
          short="Delayed Rendering"
          desc="Any element that is (partially) hidden at startup has the possibility to delay rendering it's childNodes by setting render='runtime' on the element. These elements include window, tab, pages, form and container. For instance a Tab page in a container is initally hidden and does not need to be rendered. When the tab button is pressed to activate the page the page is rendered and then displayed. This can dramatically decrease the startup time of the application."/>
        <p:define name="__WITH_DRAGDROP"
          match="@dragEnabled|@dropEnabled|@dragMoveEnabled|a:actions/a:move|a:actions/a:copy|a:dragdrop/a:allow-drop|a:dragdrop/a:allow-drag"
          short="Drag and Drop"
          desc="Element containing all the dragdrop rules for the data bound elements referencing this element."
          requires="__WITH_DRAGMODE|__WITH_TWEEN"/>
        <p:define name="__WITH_LANG_SUPPORT"
          match=""
          short="Internationalization"
          desc="Enables support for multi-language application and live language switching" />
        <p:define name="__WITH_EDITMODE"
          match=""
          short="Editmode"
          desc="" />
        <p:define name="__WITH_INTERACTIVE"
          match="@draggable|@VEsizable"
          short="Interactive elements"
          desc="Sets or retrieves whether an element is draggable.The user will able to move the element around while holding the mouse button down on the element.">
            <p:define name="__WITH_OUTLINE" 
              match="a:appsettings[@drag-outline='true']|a:appsettings[@resize-outline='true']"
              short="Show outline"
              desc="Shows an outline while dragging or resizing" />
            <p:define name="__ENABLE_INTERACTIVE_CANCEL"
              short="Enables cancelling dragging/resizing"
              desc="" />
        </p:define>
        <p:define name="__WITH_MEDIA"
          match=""
          short="Media elements interface"
          desc="" />
        <p:define name="__WITH_MULTI_LANG"
          match=""
          short="Internationalization"
          desc="" />
        <p:group short="Selectable AML elements" requires="__WITH_MULTISELECT">
            <p:define name="__WITH_MULTISELECT"
              match="@selectable"
              short="Multi select"
              desc="Sets or retrieves whether the data nodes of this element can be selected.Default is true."
              requires="__WITH_DATABINDING">
                  <p:define name="__WITH_MULTICHECK"
                    match="a:tree[@mode='check']"
                    short="Checked state"
                    desc="">
                      <p:define name="__WITH_MULTICHECK_TREE"
                        match="a:tree[@mode=check]"
                        short="Checked state for trees"
                        desc="" />
                  </p:define>
                  <p:define name="__AMLSELECT"
                    match="a:select"
                    short="select element"
                    desc=""
                    requires="__AMLBASELIST"/>
                  <p:define name="__AMLSELECT1"
                    match="a:select1"
                    short="select1 element"
                    desc=""
                    requires="__AMLBASELIST"/>
                  <p:define name="__WITH_SELECTION_BINDING"
                    match=""
                    short="Selection binding"
                    desc=""/>
                  <p:define name="__WITH_MULTISELECT_COLLAPSE"
                    match=""
                    short=""
                    desc=""/>
            </p:define>
        </p:group>
        <p:define name="__WITH_GUIELEMENT"
          match=""
          short="Gui Element"
          desc=""
          requires="" />
        <p:define name="__WITH_PRESENTATION"  
          match="@skin|@skinset"
          short="Presentation"
          desc="Sets or retrieves the skinset for this element.If none is specified the skinset attribute of  is used. When not defined the default skinset is accessed."
          requires="__WITH_GUIELEMENT|__WITH_STYLE|__WITH_XML_UTIL">
            <p:define name="__WITH_SKIN_CHANGE"
              match="a:script[contains(text(), 'setAttribute(&quot;skin&quot;')]"
              short="Skin switching"
              desc="Enables support for changing between skins dynamically." />
        </p:define>
        <p:define name="__WITH_RENAME"
          match="a:actions/a:rename|node()[@renamable='true']"
          short="Rename (inline editing)"
          desc="Rename is triggered by pressing F2 on an item or by clicking once on an already selected item. This will show an input element in place where the user can change the name of the item to a new one. When the caption is changed the data node is changed accordingly. ">
           <p:define name="__ENABLE_AUTORENAME"
             match="node()[@autorename='true']"
             short="auto-rename"
             desc="" />
        </p:define>
        <p:define name="__WITH_TRANSACTION"
          match="@transaction|node()[@action='ok']|node()[@action='cancel']|node()[@action='apply']"
          short="Transactions"
          desc="A transaction is a set of changes to data which are treated as one change. When one of the changes in the set fails, all the changes will be cancelled. In the case of a gui this is mostly relevant when a user decides to cancel after making several changes. A good example are the well known property windows with an ok, cancel and apply button. When a user edits data, for instance user information, all the changes are seen as one edit and put on the undo stack as a single action. Thus clicking undo will undo the entire transaction, not just the last change done by that user in the edit window. Transaction support both optimistic and pessimistic locking. For more information on the latter see the first example below. "
          requires="__WITH_ACTIONTRACKER" />
        <p:define name="__WITH_VALIDATION"
          match="@pattern|@minlength|@maxlength|@datatype|@valid-test|@min|@max|@notnull|@checkequal|@validgroup|@invalidmsg|@required"
          short="Validation"
          desc="All elements inheriting from this baseclass have validation support."
          requires="__AMLERRORBOX" />
        <p:define name="__WITH_VIRTUALVIEWPORT"
          match="node()[@viewport='virtual']"
          short="Virtual viewport"
          desc="viewport"
          requires="__WITH_MULTISELECT" />
        <p:define name="__WITH_XFORMS"
          match=""
          short="XForms support"
          desc=""
          requires="__AMLBASETAB" />
        <p:define name="__WITH_A11Y"
          match=""
          short="Accessibility support"
          desc="All elements inheriting from this have accessibility features." />
        <p:define name="__AMLBASESTATEBUTTONS"
          match=""
          short="State buttons"
          desc=""
          requires="__WITH_TWEEN"/>
    </p:define>

    <p:group short="AML elements"
      match=""
      desc="Javeline Components for use in a AML document"
      requires="__WITH_CLASS|__WITH_UTILITIES|__WITH_ECMAEXT|__WITH_AMLNODE|__WITH_PRESENTATION">
        <p:define name="__AMLBASELIST"
          match=""
          short=""
          descr="">
            <p:define name="__WITH_LISTGRID"
              match=""
              short=""
              descr=""/>
         </p:define>
        <p:define name="__AMLBASETAB"
          match=""
          short=""
          descr=""
          requires="__WITH_TWEEN" />
        <p:define name="__AMLBASESIMPLE"
          match=""
          short=""
          descr="" />
        <p:define name="__AMLBASETREE"
          match=""
          short=""
          descr="" />
        <p:define name="__AMLBASEBUTTON"
          match=""
          short=""
          descr=""
          requires="__WITH_CHILDVALUE" />

        <p:group name="Containers" short="Containers">
            <p:define name="__WITH_LIVEMARKUP"
              match=""
              short="LiveMarkup element"
              desc="Live Markup processor for a processing instruction"
              requires="__WITH_DATABINDING" />
            <p:define name="__WITH_LIVETEXT"
              match=""
              short="LiveText element"
              desc="Live Text processor (subset of Live Markup) for a processing instruction"
              requires="__WITH_DATABINDING" />
            <p:define name="__AMLACCORDION"
              match="a:accordion"
              short="accordion element"
              desc=""
              requires="__WITH_TWEEN" />
            <p:define name="__AMLBAR"
              match="a:bar"
              short="bar element"
              desc="Element displaying a skinnable rectangle which can contain other jml elements.This element is used by other elements such as the toolbar and statusbar element to specify sections within those elements which in turn can contain other jml elements." />
            <p:define name="__AMLFRAME"
              match="a:frame"
              short="frame element"
              desc="Element displaying a frame with a caption, containing other elements.This element is called a fieldset in html." />
            <p:define name="__AMLMODALWINDOW"
              match="a:modalwindow|a:window"
              short="modalwindow, window element"
              desc="Window inside the browser window. You can use it as a normal
                    window, a portal widget or a dockable window. Optionally enable
                    the Interactive baseclass to make the window draggable
                    and resizable."
              requires="__WITH_WINDOW|__WITH_FOCUS|__WITH_INTERACTIVE|__AMLBASESTATEBUTTONS">
                <p:define name="__ENABLE_WINDOW_WIDGET"
                  match="a:modalwindow[@widget]"
                  short="widget"
                  desc="" />
                <p:define name="__WITH_WINDOW_ANIMATIONS"
                  match=""
                  short="Adds transittion options to a modal window to appear or move away with effect"
                  desc="" />
            </p:define>
            <p:define name="__AMLSTATUSBAR"
              match="a:statusbar"
              short="statusbar element"
              desc="Element displaying a bar consisting of panels containing other text, icons and more jml.This element is usually placed in the bottom of the screen to display context sensitive and other information about the state of the application." />
            <p:define name="__AMLTAB"
              match="a:tab|a:switch"
              short="tab element"
              desc="Transform a generic function to be Profile-able, independent of its implementation.Element displaying a page and several buttons allowing a user to switch between the pages. Each page can contain arbitrary jml. Each page can render it's content during startup of the application or when the page is activated."
              requires="__AMLBASETAB">
                  <p:define name="__ENABLE_TABSCROLL"
                    match="a:tab[@scroll]|a:pages[@scroll]|a:tab[@scroll]"
                    short="Enable tab scrolling"
                    requires="__WITH_ALIGNMENT"
                    desc="" />
                  <p:define name="__ENABLE_TAB_SCALE"
                    match=""
                    short="Enable tab scaling, as do the tabs in the Google Chrome webbrowser"
                    requires="__WITH_ALIGNMENT"
                    desc="" />
                  <p:define name="__ENABLE_TAB_CLOSEBTN"
                    match=""
                    short="Enable tab close buttons, which enables a tab to be closed manually by a user"
                    requires="__WITH_ALIGNMENT"
                    desc="" />
            </p:define>
            <p:define name="__AMLTOOLBAR"
              match="a:toolbar"
              short="toolbar element"
              desc="Element displaying a bar containing buttons and other jml elements.This element is usually positioned in the top of an application allowing the user to choose from grouped buttons."
              requires="__AMLBAR" />
        </p:group>
        
        <p:group name="Form elements" short="Form elements">
            <p:define name="__AMLBUTTON"
              match="a:button"
              short="button element"
              desc="Element displaying a clickable rectangle that visually confirms to the user when the area is clicked and then executes a command."
              requires="__AMLBASEBUTTON">
                <p:define name="__ENABLE_BUTTON_ACTIONS"
                  match="a:button[@action]|a:submit[@action]|a:trigger[@action]|a:reset[@action]"
                  short="Button Actions"
                  desc="" />
            </p:define>
            <p:define name="__AMLCALDROPDOWN"
              match="a:caldropdown"
              short="caldropdown element"
              desc="Element displaying a list of day numbers in a grid, ordered by week.It allows the user to choose the month and year for which to display the days. Calendar returns a date in chosen date format. Minimal size of calendar is 150px."
              requires="__AMLBASELIST|__WITH_DATE"/>
            <p:define name="__AMLCALENDAR"
              match="a:calendar"
              short="calendar element"
              desc="Element displaying a list of day numbers in a grid, ordered by week.It allows the user to choose the month and year for which to display the days. Calendar returns a date in chosen date format. Minimal size of calendar is 150px." />
            <p:define name="__AMLCALENDARLIST"
              match="a:calendarlist"
              short="calendar element"
              desc="" />
            <p:define name="__AMLCHECKBOX"
              match="a:checkbox"
              short="checkbox element"
              desc="Element displaying a clickable rectangle having two states which can be toggled by user interaction."
              requires="__AMLBASEBUTTON"/>
            <p:define name="__AMLDROPDOWN"
              match="a:dropdown"
              short="dropdown element"
              desc="Element allowing a user to select a value from a list, which is displayed when the user clicks a button."
              requires="__AMLBASELIST|__WITH_POPUP"/>
            <p:define name="__AMLCODEEDITOR"
              match="a:codeeditor"
              short=""
              desc=""
              requires="__AMLBASELIST|__WITH_POPUP"/>
            <p:define name="__AMLDEBUGGER"
              match="a:debugger"
              short=""
              desc=""
              requires=""/>
            <p:define name="__AMLEDITOR"
              match="a:editor"
              short="editor element"
              desc=""
              requires="__WITH_ABSTRACTEVENT|__WITH_POPUP|__WITH_FOCUS|__AMLTOOLBAR|__AMLBUTTON|__WITH_CONTENTEDITABLE|__WITH_SELECTION">
                <p:define name="__ENABLE_EDITOR_ANCHOR"
                  short="anchor"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Anchor')]" />
                <p:define name="__ENABLE_EDITOR_BLOCKQUOTE"
                  short="blockquote"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Blockquote')]" />
                <p:define name="__ENABLE_EDITOR_CHARMAP"
                  short="charmap"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Charmap')]" />
                <p:define name="__ENABLE_EDITOR_CLIPBOARD"
                  short="clipboard"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'PasteText')]" />
                <p:define name="__ENABLE_EDITOR_CODE"
                  short="code"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Emotions')]" />
                <p:define name="__ENABLE_EDITOR_COLOR"
                  short="color"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Forecolor') or contains(text(), 'Backcolor')]" />
                <p:define name="__ENABLE_EDITOR_DATETIME"
                  short="datetime"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'InsertDate') or contains(text(), 'InsertTime')]" />
                <p:define name="__ENABLE_EDITOR_DIRECTIONS"
                  short="directions"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Directions')]" />
                <p:define name="__ENABLE_EDITOR_EMOTIONS"
                  short="emotions"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Emotions')]" />
                <p:define name="__ENABLE_EDITOR_FONTS"
                  short="fonts"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Fonts')]" />
                <p:define name="__ENABLE_EDITOR_HELP"
                  short="help"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'help')]" />
                <p:define name="__ENABLE_EDITOR_HR"
                  short="hr"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Hr')]" />
                <p:define name="__ENABLE_EDITOR_IMAGE"
                  short="image"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Image')]" />
                <p:define name="__ENABLE_EDITOR_LINKS"
                  short="links"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Link') or contains(text(), 'Unlink')]" />
                <p:define name="__ENABLE_EDITOR_LIST"
                  short="list"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Bullist') or contains(text(), 'NumList')]" />
                <p:define name="__ENABLE_EDITOR_MEDIA"
                  short="media"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Media')]" />
                <p:define name="__ENABLE_EDITOR_PRINTING"
                  short="printing"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Print')]" />
                <p:define name="__ENABLE_EDITOR_SEARCH"
                  short="search"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Search')]"
                  requires="__AMLSTATUSBAR" />
                <p:define name="__ENABLE_EDITOR_SUBSUP"
                  short="subsup"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Sub') or contains(text(), 'Sup')]" />
                <p:define name="__ENABLE_EDITOR_TABLES"
                  short="tables"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'Table')]"
                  requires="__AMLMENU" />
                <p:define name="__ENABLE_EDITOR_VISUALAID"
                  short="visualaid"
                  match="a:skin/a:editor/a:presentation//a:toolbar[contains(text(), 'VisualAid')]" />
                <p:define name="__ENABLE_EDITOR_SPELL"
                  short="editor spell check"
                  match="" />
            </p:define>
            <p:define name="__AMLERRORBOX"
              match="a:errorbox"
              short="errorbox element"
              desc="Element showing an error message when the attached element is in erroneous state and has the invalidmsg='' attribute specified.In most cases the errorbox element is implicit and will be created automatically."
              requires="__WITH_POPUP" />
            <p:define name="__AMLLABEL"
              match="a:label"
              short="label element"
              desc="Element displaying a text in the user interface, usually specifying a description of another element.When the user clicks on the label it can set the focus to the connected jml element."
              requires="__AMLBASESIMPLE" />
            <p:define name="__AMLPALETTE"
              match="a:palette"
              short="palette element"
              desc="Element displaying a set of choices to the user which allows him/her to pick a specific color.This element also gives the user a choice to add a custom color." />
            <p:define name="__AMLPROGRESSBAR"
              match="a:progressbar"
              short="progressbar element"
              desc="Element graphically representing a percentage value which increases automatically with time.This element is most often used to show the progress of a process. The progress can be either indicative or exact." />
            <p:define name="__AMLRADIOBUTTON"
              match="a:radiobutton"
              short="radiobutton element"           
              desc="Element displaying a two state button which is one of a grouped set.Only one of these buttons in the set can be checked at the same time."
              requires="__WITH_CHILDVALUE" />
            <p:define name="__AMLSLIDER"
              match="a:slider"
              short="slider element"
              desc="Element allowing the user to select a value from a range of values between a minimum and a maximum value."
              requires="__WITH_TWEEN" />
            <p:define name="__AMLSPINNER"
              match="a:spinner"
              short="spinner element"
              desc="This element is used to choosing number by plus/minus buttons.When plus button is clicked longer, number growing up faster. The same situation is for minus button. It's possible to increment and decrement value by moving mouse cursor up or down with clicked input. Max and min attributes define range with allowed values." />
            <p:define name="__AMLTEXT"
              match="a:text"
              short="text element"
              desc="Element displaying a rectangle containing arbritrary (X)HTML.This element can be databound and use databounding rules to convert data into (X)HTML using for instance XSLT or JSLT."
              requires="__WITH_CHILDVALUE" />
            <p:define name="__AMLTEXTAREA"
              match="a:textarea"
              short="textarea element"
              desc="Alias to the textbox element" />
            <p:define name="__AMLTEXTBOX"
              match="a:textbox|a:input|a:secret|a:textarea"
              short="textbox element"
              desc="Element displaying a rectangular area wich allows a user to type information.The information typed can be restricted by using masking. The information can also be hidden from view when used in password mode. By adding an autocomplete element as a child the value for the textbox can be looked up as you type. By setting the mask atribute, complex data input validation is done while the users types.">
                <p:define name="__ENABLE_TEXTBOX_MASKING"
                  match="a:textbox[@mask]|a:input[@mask]"
                  short="masking"
                  desc="Sets or retrieves a complex input pattern that the user should adhere to.This is a string which is a combination of special and normal characters. Then comma seperated it has two options. The first option specifies whether the non input characters (the chars not typed by the user) are in the value of this element. The second option specifies the character that is displayed when the user hasn't yet filled in a character."/>
                <p:define name="__ENABLE_TEXTBOX_AUTOCOMPLETE"
                  match="a:textbox[@autocomplete]|a:input[@autocomplete]"
                  short="autocomplete"
                  desc=""/>
                <p:define name="__ENABLE_TEXTBOX_AUTOCOMPLETE2"
                  match=""
                  short=""
                  desc=""/>
            </p:define>
            <p:define name="__AMLPAGES"
              match="a:pages"
              short="pages element"
              desc="Alias to the tab element"
              requires="__AMLBASETAB"/>
            <p:define name="__AMLSWITCH"
              match="a:switch"
              short="Switch element"
              desc="Alias to the tab element"
              requires="__AMLBASETAB"/>
            <p:define name="__AMLINPUT"
              match="a:input"
              short="input element"
              desc="Alias to the textbox element" />
            <!--p:define name="__JCONTAINER"
              match="a:container"
              short="container element"
              desc="Element containing other elements that are hidden by default." /-->
            <p:define name="__AMLDIVIDER"
              match="a:divider"
              short="divider element"
              desc="Element displaying a divider. For use in toolbars, menu's and such." />
            <p:define name="__AMLMARKUPEDIT"
              match="a:markupedit"
              short="markupedit element"
              desc="Element for editing markup in the same way firebug provides."
              requires="__WITH_TWEEN|__WITH_RENAME" />
            <p:define name="__AMLRANGE"
              match="a:range"
              short="range element"
              desc="Alias to the slider element"
              requires="__WITH_TWEEN" />
            <p:define name="__AMLSECRET"
              match="a:secret"
              short="secret element"
              desc="Alias to the textbox element" />
            <p:define name="__AMLSUBMITFORM"
              match="a:submitform|a:xform"
              short="submitform element"
              desc="Element allowing special form functionality to a set of AML elements.This element is an alias for a:xforms offering xform compatible strategies with relation to submitting the form's data. This element also offers form paging, including validation across pages. Buttons placed inside this element can contain an action attribute specifying whether they behave as next, previous or finish(submit) buttons. This element is not necesary for simple forms, like the normal html webforms (see the validation baseclass). This element should be used when multi page forms are required, or a wizard style form."
              requires="__AMLBASETAB"/>
            <!--p:define name="__JXFORM"
              match="a:xform"
              short="xform element"
              desc="Alias to the submitform element" /-->
            <p:define name="__AMLCOLLECTION"
              match="a:collection"
              short="collection element"
              desc="Virtual element acting as a parent for a set of child elements but only draws it's children.It doesn't have any representation itself." />
            <p:define name="__AMLCOLORPICKER"
              match="a:colorpicker"
              short="colorpicker element"
              desc="Element giving the user a visual choice of several colors presented in a grid." />
            <p:define name="__AMLUPLOAD"
              match="a:upload"
              short="upload element"
              desc="Element allowing the user to upload a file to a server.This element does not have a visual representation. By adding buttons, a progressbar and other elements you can fully customize your upload component. Use property binding to update those elements with the state of the upload element."
              requires="__WITH_ABSTRACTEVENT" />
            <p:define name="__AMLPAGER"
              match="a:pager"
              short="Pager element"
              desc="This elements displays buttons which can be used to navigate between some parts of data, for example between parts of article" />
            <p:define name="__AMLCOMMENT"
              match="a:comment"
              short="Comment element"
              desc="All elements within the comment tag are ignored by the parser." />
            <p:define name="__AMLLINESELECT"
              match="a:lineselect"
              short="Lineselect element"
              desc="Element displaying text with each line being selectable. This is especially useful for log messages." />
            <p:define name="__AMLSTYLE"
              match="a:style"
              short="Style element"
              desc="" />
            <p:define name="__AMLPAGE"
              match="a:page"
              short="Page element"
              desc="A page in a pageable element. (i.e. a page in a tab)">
                <p:define name="__ENABLE_PAGE_TRANSITIONS"
                  match=""
                  short="Page transitions"
                  desc="" />
            </p:define>
            <p:define name="__AMLLOADINDICATOR"
              match="a:loadindicator"
              short="A more advanced replacement for animated GIF based loader images"
              desc=""/>
            <!--p:define name="__JINSERT"
              match="a:insert"
              short="insert element"
              desc="Determines how new data is loaded when the user expands an item.For instance by clicking on the + button. This way only the root nodes need to be loaded at the start of the application. All other children are received on demand when the user requests it by navigating throught the tree."
              requires="__WITH_DATABINDING"/-->
        </p:group>
        
        <p:group name="Selection Elements" short="Selection Elements">
            <p:define name="__AMLDATAGRID"
              match="a:datagrid"
              short="datagrid element"
              desc="Element providing a sortable, selectable grid containing scrollable information. Grid columns can be reordered and resized."
              requires="__WITH_PLANE|__WITH_TWEEN" />
            <p:define name="__AMLLIST"
              match="a:list"
              short="list element"
              desc="Element displaying a skinnable list of options which can be selected.Selection of multiple items can be allowed. Items can be renamed and removed. The list can be used as a collection of checkboxes or radiobuttons. This is especially useful for use in forms. This element is one of the most often used elements. It can display lists of items in a cms style interface or display a list of search results in a more website like interface."
              requires="__AMLBASELIST"/>
            <p:define name="__AMLTREE"
              match="a:tree"
              short="tree element"
              desc="Element displaying data in a list where each item in the list can contain such a list.This element gives the user the ability to walk through this tree of data by clicking open elements to show more elements. The tree can grow by fetching more data when the user requests it."
              requires="__WITH_TWEEN" />
            <p:define name="__AMLPROPEDIT"
              match="a:propedit"
              short="propedit element"
              desc="Element providing a sortable, selectable grid containing scrollable information. Grid columns can be reordered and resized."
              requires="__WITH_PLANE|__WITH_TWEEN" />
            <p:define name="__AMLMENU"
              match="a:menu"
              short="menu element"
              desc="Element displaying a skinnable menu of items which can be choosen.Based on the context of the menu, items can be shown and hidden. That's why this element is often called a contextmenu." />
            <p:define name="__AMLITEM"
              match="a:item"
              short="Item element"
              desc="Item of a menu displaying a clickable area."
              requires="__AMLMENU|__WITH_CHILDVALUE" />
            <p:define name="__AMLTOC"
              match="a:toc"
              short="toc element"
              desc="Element acting as the navigational instrument for any element based on BaseTab.This element displays buttons which can be used to navigate the different pages of for instance a submitform or pages element. This element is page validation aware and can display current page progress when connected to a submitform." />
        </p:group>

        <p:group name="Layout" short="Layout">
            <p:define name="__AMLTABLE"
              match="a:table"
              short="table element"
              desc="Any child element of this element is placed in a grid.The size of the columns and rows of the grid can be set by attributes. Child elements can span multiple columns. Using '*' as a size indicator will use the remaining size for that column or row, when the grid's size is set."
              requires="__WITH_LAYOUT" />
            <p:define name="__AMLHBOX"
              match="a:hbox"
              short="hbox element"
              desc="Container that stacks it's children horizontally."
              requires="__WITH_ALIGNMENT" />
            <p:define name="__AMLPORTAL"
              match="a:portal"
              short="portal element"
              desc="Portal widget (aka dashboard) displaying multiple windows with
                    content and settings panel in one or more columns."
              requires="__AMLMODALWINDOW" />
            <p:define name="__AMLVBOX"
              match="a:vbox"
              short="vbox element"
              desc="Container that stacks it's children vertically."
              requires="__WITH_ALIGNMENT" />
            <p:define name="__AMLFILLER"
              match="a:filler"
              short="fill element"
              desc=""
              requires="__WITH_ALIGNMENT" />
        </p:group>

        <p:group name="Media" short="Media">
            <p:define name="__AMLBROWSER"
              match="a:browser"
              short="browser element"
              desc="Element displaying the rendered contents of an URL." />
            <p:define name="__AMLIMG"
              match="a:img"
              short="img element"
              desc="Element displaying a picture.This element can read databound resources."
              requires="__AMLBASESIMPLE" />
            <p:define name="__AMLSLIDESHOW"
              match="a:slideshow"
              short="slideshow element"
              desc="This element is used for viewing images.It's possible to add thumbnails and a description to each of them. You can select a displayed image in several ways. With a mouse buttons, the mousewheel or keyboard arrows. The thumbnails allow the user to quickly select the image from the displayed list."
              requires="__WITH_MOUSESCROLL|__WITH_TWEEN"/>
             <p:define name="__AMLGALLERY"
              match="a:slideshow"
              short="slideshow element"
              desc="This element is used for viewing images.It's possible to add thumbnails and a description to each of them. You can select a displayed image in several ways. With a mouse buttons, the mousewheel or keyboard arrows. The thumbnails allow the user to quickly select the image from the displayed list."
              requires="__WITH_MOUSESCROLL|__WITH_TWEEN"/>
            <p:define name="__AMLNOTIFIER"
              match="a:notifier"
              short="notifier element"
              desc="Notification element, which shows popups when events occur.Similar to growl on the OSX platform."
              requires="__WITH_TWEEN" />
            <p:define name="__AMLEVENT"
              match="a:event"
              short="Event element"
              desc="Displays a popup element with a message with optionally an icon at the position specified by the position attribute. After the timeout has passed the popup will dissapear automatically. When the mouse hovers over the popup it doesn't dissapear." />
            <p:define name="__AMLSOURCE"
              match="a:source"
              short="Source element"
              desc="" />
            <!--p:define name="__JPICTURE"
              match="a:picture"
              short="picture element"
              desc=""
              requires="__AMLBASESIMPLE" /-->
            <p:define name="__AMLAUDIO"
              match="a:audio"
              short="audio element"
              desc="Element that is able to play an audio file or remote stream."
              requires="__WITH_MEDIA|__PARSER_URL|__WITH_FLASH" />
            <p:define name="__AMLVIDEO"
              match="a:video"
              short="video element"
              desc="Element that is able to play a video file or remote stream."
              requires="__WITH_MEDIA|__PARSER_URL|__WITH_FLASH">
                <p:define name="__WITH_VIDEO_VLC"
                  match=""
                  short="vlc video"
                  desc=""/>
            </p:define>
            <p:define name="__AMLFLASHPLAYER"
              match="a:flashplayer"
              short="flashplayer element"
              desc="Element displaying the contents of a .swf (adobe flash) file."
              requires="__AMLBASESIMPLE" />
        </p:group>

        <p:group name="Visualization" short="Visualization">
            <p:define name="__AMLMAP"
              match="a:map"
              short="Google Map element"
              desc=""/>
            <p:define name="__AMLFLOWCHART"
              match="a:flowchart"
              short="flowchart element"
              desc="Element is implementing adding and removing block elements.Every block could be rotated, flipped, resized, renamed, locked and moved. It's possible to add connections between them."
              requires="__WITH_FLOW|__WITH_RESIZE"/>
            <p:define name="__AMLFLOWCHART2"
              match="a:flowchart"
              short="flowchart element"
              desc="Element is implementing adding and removing block elements.Every block could be rotated, flipped, resized, renamed, locked and moved. It's possible to add connections between them."
              requires="__WITH_FLOW|__WITH_RESIZE"/>
            <p:define name="__AMLVECTORFLOW"
              match=""
              short=""
              desc=""
              requires=""/>
            <p:define name="__AMLCHART"
              match="a:chart"
              short="chart element"
              desc=""
              requires="__WITH_MOUSESCROLL|__WITH_DRAW|__ENABLE_DRAW_CANVAS|__ENABLE_DRAW_VML">
                <p:define name="__ENABLE_CHART_GRID2D"
                  match="a:axis[@mode='2D']/a:graph[@mode='grid']"
                  short="grid2d" />
                <p:define name="__ENABLE_CHART_GRID3D"
                  match="a:axis[@mode='3D']/a:graph[@mode='grid']"
                  short="grid3d" />
                <p:define name="__ENABLE_CHART_LINE2D"
                  match="a:axis[@mode='2D']/a:graph[@mode='line']"
                  short="line2d" />
                <p:define name="__ENABLE_CHART_LINE3D"
                  match="a:axis[@mode='3D']/a:graph[@mode='line']"
                  short="line3d" />
                <p:define name="__ENABLE_CHART_BAR2D"
                  match="a:axis[@mode='2D']/a:graph[@mode='bar']"
                  short="bar2d" />
                <p:define name="__ENABLE_CHART_BAR3D"
                  match="a:axis[@mode='3D']/a:graph[@mode='bar']"
                  short="bar3d" />
                <p:define name="__ENABLE_CHART_PIE2D"
                  match="a:axis[@mode='2D']/a:graph[@mode='pie']"
                  short="pie2d" />
                <p:define name="__ENABLE_CHART_PIE3D"
                  match="a:axis[@mode='3D']/a:graph[@mode='pie']"
                  short="pie3d" />
                <p:define name="__ENABLE_CHART_AXIS2D"
                  match="a:axis[@mode='2D']"
                  short="axis2d" />
                <p:define name="__ENABLE_CHART_AXIS3D"
                  match="a:axis[@mode='3D']"
                  short="axis3d" />
                <p:define name="__ENABLE_CHART_HEIGHT3D"
                  match="a:axis[@mode='3D']/a:graph[@mode='height']"
                  short="chart height 3d" />
                <p:define name="__ENABLE_CHART_SHAPE2D"
                  match="a:axis[@mode='2D']/a:graph[@mode='height']"
                  short="chart shape 2d" />
            </p:define>
        </p:group>

        <p:group short="Templating">
            <p:define name="__AMLREPEAT"
              match="a:repeat"
              short="repeat element"
              desc="Element that defines a template of jml which is repeated for a list of selected data nodes.Each template instance is databound to the same data node." />
            <!--p:define name="__JJSLT"
              match="a:jslt"
              short="jslt element"
              desc="Element displaying the contents of a jslt transformation on the bound data.For more information on jslt see the jsltimplementation object."
              requires="__PARSER_JSLT|__ENABLE_BINDING_JSLT"/-->
            <!--p:define name="__JXSLT"
              match="a:xslt"
              short="xslt element"
              desc="Element displaying the contents of an xslt transformation on the bound data."
              requires="__WITH_DATABINDING"/-->
        </p:group>
        <p:group short="Logic">
            <p:define name="__WITH_ACTIONTRACKER"
              match="a:actiontracker|@actiontracker"
              short="ActionTracker"
              desc="Element keeping track of all user actions that are triggered in GUI elements.This element maintains a stack of actions and knows how to undo &amp; redo them. It is aware of how to synchronize the changes to the backend data store. With offline support enabled the actiontracker can serialize both its undo stack and its execution stack such that these can be kept in between application sessions. This means that a user will be able to close the application and start it at a later date whilst keeping his or her entire undo/redo stack. Furthermore all changes done whilst being offline will be synchronized to the data store when the application comes online.">
                <p:define name="__ENABLE_ACTIONTRACKER_TRANSACTIONS" />
                <p:define name="__ENABLE_ACTIONTRACKER_SLIDER" />
                <p:define name="__ENABLE_ACTIONTRACKER_HTML5" />
            </p:define>
            <!--p:define name="__JHTMLWRAPPER"
              match="a:htmlwrapper"
              short="htmlwrapper element"
              desc="" /-->
            <p:define name="__WITH_SMARTBINDINGS"
              match="a:smartbindings|a:actions|a:bindings|a:dragdrop|@ref"
              short="smartbindings element"
              desc="Sets or retrieves the id of the bindings element that contains the binding rules for all elements connected to this smartbinding element."
              requires="__WITH_ACTIONTRACKER|__WITH_DATABINDING" />
            <p:define name="__AMLSTATE"
              match="a:state"
              short="State element"
              desc="" />
            <p:define name="__AMLSTATEGROUP"
              match="a:state-group"
              short="Group-state element"
              desc=""
              requires="__AMLSTATE"/>
            <p:define name="__AMLTEMPLATE"
              match=""
              short=""
              desc="" />
            <p:define name="__AMLTEMPLATE"
              match="a:template"
              short="template element"
              desc="Defines a template for jml elements." />
            <p:define name="__AMLSCRIPT"
              match="a:script"
              short="script element"
              desc="" />
            <p:define name="__AMLICONMAP"
              match="a:iconmap"
              short="Icon maps"
              desc="Enable support for image maps, containing icons, defined by CSS rules" />
            <p:define name="__WITH_APPSETTINGS"
              match="a:appsettings"
              short="appsettings element"
              desc="Element specifying the settings of the application."
              requires="__WITH_CONFIG">
                <p:define name="__WITH_IEPNGFIX"
                  match="a:appsettings[@iepngfix-elements]|a:appsettings[@iepngfix]"
                  short="PNG24 support for IE"
                  desc="Sets or retrieves whether the fix for PNG images with transparency should be applied." />
                <p:define name="__WITH_APP_DEFAULTS"
                  match="a:appsettings/a:defaults"
                  short="Application-wide default settings"
                  desc="Enables support for setting defaults for any AML element inside the &lt;a:appsettings&gt; element" />
                <p:define name="__WITH_PRINTER"
                  match="@*[contains(., 'apf.print')]|a:script[contains(text(), 'apf.print')]|a:appsettings/a:printer"
                  short="Printer/ print-preview support"
                  desc="Sents html to a printer in formatted form." />
                <p:define name="__WITH_QUERYAPPEND"
                  match="a:appsettings[@query-append]"
                  short="Query string append"
                  desc="Enables support for appending a (pair of) variable(s) to the query string of all request made with Teleport" />
                <p:define name="__WITH_UNDO_KEYS"
                  match="a:appsettings[@undokeys='true']"
                  short="Undo/ redo keys"
                  desc="Sets or retrieves whether the undo and redo keys (in windows they are ctrl-Z and ctrl-Y) are enabled."
                  requires="__WITH_ACTIONTRACKER"/>
            </p:define>
            <p:define name="__WITH_AUTH"
              match="a:auth|a:appsettings[@login]|a:appsettings[@logout]"
              short="auth element"
              desc="Provides a mechanism to deal with various types of user authentication and integrates seamlessly with Teleport modules." />
            <p:define name="__AMLAPPLICATION"
              match="a:application"
              short="Application element"
              desc="" />
            <p:define name="__AMLLOADER"
              match="a:loader"
              short="Loader element"
              desc="" />
            <p:define name="__WITH_SETTINGS"
              match="a:settings"
              short="settings element"
              desc="" />
            <p:define name="__WITH_RDB"
              match="a:remote"
              short="remote element"
              desc="Element allowing data synchronization between multiple clients using the same application or application part.This element is designed as thecore of collaborative application logic for Javeline PlatForm. The children of this element specify how the uniqueness of data nodes is determined. By pointing models to this element, all changes to their data will be streamed through this element to all listening client over a choosen protocol." />
            <p:define name="__WITH_MODEL"
              match="a:model"
              short="model element"
              desc="Element functioning as the central access point for xml data.Data can be retrieved from any data source using data instructions. Data can be submitted using data instructions in a similar way to html form posts. The modal can be reset to it's original state. It has support for offline use and synchronization between multiple clients.">
                <p:define name="__WITH_MODEL_VALIDATION"
                  match=""
                  short="Model validation"
                  desc=""
                  requires="__PARSER_XSD" />
            </p:define>
        </p:group>

        <p:define name="__AMLTELEPORT"
          match="a:teleport"
          short="Teleport"
          desc="Element which specifies the ways the application can communicate to remote data sources."
          requires="__PARSER_AML|__WITH_ECMAEXT|__WITH_CLASS|__WITH_UTILITIES">
            <!-- defines below implicitly require __AMLTELEPORT -->
            <p:define name="__TP_IFRAME"
              match=""
              short="Non ActiveX XmlHttpRequest"
              desc="For secured environments. IE only." />
            <p:define name="__TP_WEBDAV"
              match="a:webdav"
              short="WebDAV"
              desc="Implementation (reference) of the WebDAV remote filesystem protocol; WebDAV is generally used for collaborative content editing/ management, because it offers simple file locking mechanisms to provide fail-safe transactions and the ability to perform atomic saves on your documents that are on a webserver. See http://www.webdav.org for more information about WebDAV."
              requires="__WITH_MD5|__WITH_BASE64|__WITH_SHA1|__PARSER_URL" />
            <p:define name="__TP_XMPP"
              match="a:xmpp"
              short="XMPP (Jabber)"
              desc="Implementation (reference) of the XMPP (Jabber) Instant Messaging and Presence Notification protocol; The XMPP standard for messaging and presence can be used for live chats between, let's say, your clients and a company representative, but it also powers our Remote SmartBindings feature."
              requires="__WITH_MD5|__WITH_BASE64|__WITH_SHA1|__PARSER_URL"/>
            <p:define name="__TP_XMPP_ROSTER"
              match=""
              short="XMPP Roster (Jabber)"
              desc="Element implementing a Roster service for the apf.xmpp object. The Roster is a centralised registry for Jabber ID's (JID) to which the user subscribed. Whenever the presence info of a JID changes, the roster will get updated accordingly."
              requires="__TP_XMPP"/>
            <p:define name="__TP_XMPP_MUC"
              match=""
              short="XMPP Multi User Chat (Jabber)"
              desc="Interface implementing a Multi User Chat service for the apf.xmpp object. The Multi User Chat class is a class that contains all the functions needed to start, end, join, leave any XMPP/ Jabber chat room, and more."
              requires="__TP_XMPP"/>
            <p:define name="__TP_XMPP_RDB"
              match=""
              short="XMPP Multi User Chat (Jabber)"
              desc="Interface implementing a Multi User Chat service for the apf.xmpp object. The Multi User Chat class is a class that contains all the functions needed to start, end, join, leave any XMPP/ Jabber chat room, and more."
              requires="__TP_XMPP"/>
            <p:define name="__TP_PERSIST"
              match=""
              short="Persistent connection layer for bidirectional data streams over a keep-alive http connection."
              desc=""/>

            <p:define name="__TP_HTTP"
              match="a:script[contains(text(), 'apf.http')]"
              short="HTTP"
              desc="">
                <p:define name="__WITH_HTTP_CACHE"
                  match=""
                  short="HTTP caching"
                  desc=""
                  requires="__WITH_STORAGE"/>
            </p:define>
            <p:define name="__TP_RPC"
              match="a:rpc"
              short="Remote Procedure Calls"
              desc="Modules are available for SOAP, XML-RPC, CGI, JSON-RPC and several proprietary protocols. ">
                <!-- defines below implicitly require __TP_RPC -->
                <p:define name="__TP_RPC_CGI"
                  match="a:rpc[@protocol='cgi']"
                  short="CGI"
                  desc="Implementation of the Common Gateway Interface (CGI) as a module for the RPC plugin of apf.teleport." />
                <p:define name="__TP_RPC_HEADER"
                  match="a:rpc[@protocol='header']"
                  short="Header"
                  desc="Implementation of an RPC protocol which encodes the variable information in the HTTP headers of the request." />
                <p:define name="__TP_RPC_JPHP"
                  match="a:rpc[@protocol='jphp']"
                  short="JPHP"
                  desc="Implementation of an RPC protocol which encodes the data in a serialized format in the same way as the php serialize() function does. It requires json in return. This protocol was originally designed to make use of the native unserializer methods on both sides of the line." />
                <p:define name="__TP_RPC_JSON"
                  match="a:rpc[@protocol='jsonrpc']"
                  short="JSON-RPC"
                  desc="Implementation of the JSON-RPC protocol as a module for the RPC plugin of apf.teleport." />
                <p:define name="__TP_RPC_REST"
                  match="a:rpc[@protocol='rest']"
                  short="REST"
                  desc="" />
                <p:define name="__TP_RPC_SOAP"
                  match="a:rpc[@protocol='soap']"
                  short="SOAP"
                  desc="Implementation of the SOAP RPC protocol." />
                <p:define name="__TP_RPC_XMLRPC"
                  match="a:rpc[@protocol='xmlrpc']"
                  short="XML-RPC"                
                  desc="Implementation of the XML-RPC protocol as a module for the RPC plugin of apf.teleport." />
                <p:define name="__TP_RPC_YQL"
                  match="a:rpc[@protocol='yql']"
                  short="YQL-RPC"
                  desc="Implementation of the Yahoo! Query Language as a module for the RPC" />
                <p:define name="__TP_RPC_RDB"
                  match="a:rpc[@protocol='rdb']"
                  short="XML-RPC"                
                  desc="Implementation of the Remote DataBinding RPC protocol as a module for the RPC plugin of apf.teleport." />
            </p:define>
        </p:define>
    </p:group>
</p:defines>

